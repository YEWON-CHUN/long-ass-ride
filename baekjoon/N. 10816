#숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 
#정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.


method 1) 병합 정렬, 이진 탐색 - lower bound / upper bound
import sys
N = int(sys.stdin.readline())
card = list(map(int, sys.stdin.readline().split()))
M = int(sys.stdin.readline())
k = list(map(int, sys.stdin.readline().split()))

def merge_sort(list):
    if len(list) < 2:
        return list

    mid = len(list)//2
    left = merge_sort(list[mid:])
    right = merge_sort(list[:mid])
    merged = []
    l = r = 0
    while l < len(left) and r < len(right):
        if left[l] < right[r]:
            merged.append(left[l])
            l += 1
        else:
            merged.append(right[r])
            r += 1
    merged += left[l:]
    merged += right[r:]
    return merged


card2 = merge_sort(card)


def lower(list, key):
    low = 0
    high = len(list)
    while low < high:
        mid = (low + high) // 2
        if key <= list[mid]:
            high = mid
        else:
            low = mid + 1
    return low


def upper(list, key):
    low = 0
    high = len(list)
    while low < high:
        mid = (low + high) // 2
        if key >= list[mid]:
            low = mid + 1
        else:
            high = mid
    return low


for i in k:
    result = upper(card2, i) - lower(card2, i)
    print(result, end=' ')
    
    
  
  
method 2) collections 모듈 Counter 이용
import sys
from collections import Counter
N = int(sys.stdin.readline())
card = Counter(map(int, sys.stdin.readline().split()))
m = int(input())
key = list(map(int, sys.stdin.readline().split()))
for i in key:
    print(card[i], end =' ')
